import { Context } from 'telegraf'
import { getUserStats } from '../../services/userService'
import { replyHTML } from '../../utils/replyHTML'
import { formatRuntime } from '../../utils/tmdb/formatRuntime'

export async function statsCommandHandler(ctx: Context) {
	const userId = ctx.from?.id!

	try {
		const userStats = await getUserStats(userId)

		await replyHTML(
			ctx,
			`üé¨ –û—Ü—ñ–Ω–µ–Ω–æ —Ñ—ñ–ª—å–º—ñ–≤: <strong>${
				userStats.numberOfRatings
			}</strong>\n‚≠êÔ∏è –°–µ—Ä–µ–¥–Ω—è –æ—Ü—ñ–Ω–∫–∞: <strong>${
				userStats.avgRating
			}</strong>\nüèÜ–ù–∞–π–≤–∏—â–∞ –æ—Ü—ñ–Ω–∫–∞: <strong>${
				userStats.mostRatedMovieTitle
			}</strong>\nü§Æ –ù–∞–π–Ω–∏–∂—á–∞ –æ—Ü—ñ–Ω–∫–∞: <strong>${
				userStats.lowestRatedMovieTitle
			}</strong>\n‚è≥ –ó–∞–≥–∞–ª—å–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –ø–µ—Ä–µ–≥–ª—è–¥—É: <strong>${formatRuntime(
				userStats.totalWatchTime as number
			)}</strong>`
		)
	} catch (error) {
		console.error('Stats error', error)
		await ctx.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏')
	}
}
